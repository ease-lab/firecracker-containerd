// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: firecracker.proto

package proto

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// CreateVMRequest specifies creation parameters for a new FC instance
type CreateVMRequest struct {
	// VM identifier to assign
	VMID string `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	// Specifies the machine configuration for the VM
	MachineCfg *FirecrackerMachineConfiguration `protobuf:"bytes,2,opt,name=MachineCfg,json=machineCfg,proto3" json:"MachineCfg,omitempty"`
	// Specifies the file path where the kernel image is located
	KernelImagePath string `protobuf:"bytes,3,opt,name=KernelImagePath,json=kernelImagePath,proto3" json:"KernelImagePath,omitempty"`
	// Specifies the commandline arguments that should be passed to the kernel
	KernelArgs string `protobuf:"bytes,4,opt,name=KernelArgs,json=kernelArgs,proto3" json:"KernelArgs,omitempty"`
	// Specifies drive containing the rootfs of the VM
	RootDrive *FirecrackerRootDrive `protobuf:"bytes,5,opt,name=RootDrive,json=rootDrive,proto3" json:"RootDrive,omitempty"`
	// Specifies additional drives whose contents will be mounted inside the VM on boot.
	DriveMounts []*FirecrackerDriveMount `protobuf:"bytes,6,rep,name=DriveMounts,json=driveMounts,proto3" json:"DriveMounts,omitempty"`
	// Specifies the networking configuration for a VM
	NetworkInterfaces []*FirecrackerNetworkInterface `protobuf:"bytes,7,rep,name=NetworkInterfaces,json=networkInterfaces,proto3" json:"NetworkInterfaces,omitempty"`
	// The number of dummy drives to reserve in advance before running FC instance.
	ContainerCount int32 `protobuf:"varint,8,opt,name=ContainerCount,json=containerCount,proto3" json:"ContainerCount,omitempty"`
	// Whether the VM should exit after all tasks running in it have been deleted.
	ExitAfterAllTasksDeleted bool          `protobuf:"varint,9,opt,name=ExitAfterAllTasksDeleted,json=exitAfterAllTasksDeleted,proto3" json:"ExitAfterAllTasksDeleted,omitempty"`
	JailerConfig             *JailerConfig `protobuf:"bytes,10,opt,name=JailerConfig,json=jailerConfig,proto3" json:"JailerConfig,omitempty"`
	TimeoutSeconds           uint32        `protobuf:"varint,11,opt,name=TimeoutSeconds,json=timeoutSeconds,proto3" json:"TimeoutSeconds,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}      `json:"-"`
	XXX_unrecognized         []byte        `json:"-"`
	XXX_sizecache            int32         `json:"-"`
}

func (m *CreateVMRequest) Reset()         { *m = CreateVMRequest{} }
func (m *CreateVMRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVMRequest) ProtoMessage()    {}
func (*CreateVMRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{0}
}
func (m *CreateVMRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVMRequest.Unmarshal(m, b)
}
func (m *CreateVMRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVMRequest.Marshal(b, m, deterministic)
}
func (m *CreateVMRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVMRequest.Merge(m, src)
}
func (m *CreateVMRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVMRequest.Size(m)
}
func (m *CreateVMRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVMRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVMRequest proto.InternalMessageInfo

func (m *CreateVMRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

func (m *CreateVMRequest) GetMachineCfg() *FirecrackerMachineConfiguration {
	if m != nil {
		return m.MachineCfg
	}
	return nil
}

func (m *CreateVMRequest) GetKernelImagePath() string {
	if m != nil {
		return m.KernelImagePath
	}
	return ""
}

func (m *CreateVMRequest) GetKernelArgs() string {
	if m != nil {
		return m.KernelArgs
	}
	return ""
}

func (m *CreateVMRequest) GetRootDrive() *FirecrackerRootDrive {
	if m != nil {
		return m.RootDrive
	}
	return nil
}

func (m *CreateVMRequest) GetDriveMounts() []*FirecrackerDriveMount {
	if m != nil {
		return m.DriveMounts
	}
	return nil
}

func (m *CreateVMRequest) GetNetworkInterfaces() []*FirecrackerNetworkInterface {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

func (m *CreateVMRequest) GetContainerCount() int32 {
	if m != nil {
		return m.ContainerCount
	}
	return 0
}

func (m *CreateVMRequest) GetExitAfterAllTasksDeleted() bool {
	if m != nil {
		return m.ExitAfterAllTasksDeleted
	}
	return false
}

func (m *CreateVMRequest) GetJailerConfig() *JailerConfig {
	if m != nil {
		return m.JailerConfig
	}
	return nil
}

func (m *CreateVMRequest) GetTimeoutSeconds() uint32 {
	if m != nil {
		return m.TimeoutSeconds
	}
	return 0
}

type CreateVMResponse struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	SocketPath           string   `protobuf:"bytes,2,opt,name=SocketPath,json=socketPath,proto3" json:"SocketPath,omitempty"`
	LogFifoPath          string   `protobuf:"bytes,3,opt,name=LogFifoPath,json=logFifoPath,proto3" json:"LogFifoPath,omitempty"`
	MetricsFifoPath      string   `protobuf:"bytes,4,opt,name=MetricsFifoPath,json=metricsFifoPath,proto3" json:"MetricsFifoPath,omitempty"`
	CgroupPath           string   `protobuf:"bytes,5,opt,name=CgroupPath,json=cgroupPath,proto3" json:"CgroupPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVMResponse) Reset()         { *m = CreateVMResponse{} }
func (m *CreateVMResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVMResponse) ProtoMessage()    {}
func (*CreateVMResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{1}
}
func (m *CreateVMResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVMResponse.Unmarshal(m, b)
}
func (m *CreateVMResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVMResponse.Marshal(b, m, deterministic)
}
func (m *CreateVMResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVMResponse.Merge(m, src)
}
func (m *CreateVMResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVMResponse.Size(m)
}
func (m *CreateVMResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVMResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVMResponse proto.InternalMessageInfo

func (m *CreateVMResponse) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

func (m *CreateVMResponse) GetSocketPath() string {
	if m != nil {
		return m.SocketPath
	}
	return ""
}

func (m *CreateVMResponse) GetLogFifoPath() string {
	if m != nil {
		return m.LogFifoPath
	}
	return ""
}

func (m *CreateVMResponse) GetMetricsFifoPath() string {
	if m != nil {
		return m.MetricsFifoPath
	}
	return ""
}

func (m *CreateVMResponse) GetCgroupPath() string {
	if m != nil {
		return m.CgroupPath
	}
	return ""
}

type StopVMRequest struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	TimeoutSeconds       uint32   `protobuf:"varint,2,opt,name=TimeoutSeconds,json=timeoutSeconds,proto3" json:"TimeoutSeconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopVMRequest) Reset()         { *m = StopVMRequest{} }
func (m *StopVMRequest) String() string { return proto.CompactTextString(m) }
func (*StopVMRequest) ProtoMessage()    {}
func (*StopVMRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{2}
}
func (m *StopVMRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopVMRequest.Unmarshal(m, b)
}
func (m *StopVMRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopVMRequest.Marshal(b, m, deterministic)
}
func (m *StopVMRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopVMRequest.Merge(m, src)
}
func (m *StopVMRequest) XXX_Size() int {
	return xxx_messageInfo_StopVMRequest.Size(m)
}
func (m *StopVMRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopVMRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopVMRequest proto.InternalMessageInfo

func (m *StopVMRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

func (m *StopVMRequest) GetTimeoutSeconds() uint32 {
	if m != nil {
		return m.TimeoutSeconds
	}
	return 0
}

type GetVMInfoRequest struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVMInfoRequest) Reset()         { *m = GetVMInfoRequest{} }
func (m *GetVMInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetVMInfoRequest) ProtoMessage()    {}
func (*GetVMInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{3}
}
func (m *GetVMInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVMInfoRequest.Unmarshal(m, b)
}
func (m *GetVMInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVMInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetVMInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVMInfoRequest.Merge(m, src)
}
func (m *GetVMInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetVMInfoRequest.Size(m)
}
func (m *GetVMInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVMInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVMInfoRequest proto.InternalMessageInfo

func (m *GetVMInfoRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type GetVMInfoResponse struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	SocketPath           string   `protobuf:"bytes,2,opt,name=SocketPath,json=socketPath,proto3" json:"SocketPath,omitempty"`
	LogFifoPath          string   `protobuf:"bytes,3,opt,name=LogFifoPath,json=logFifoPath,proto3" json:"LogFifoPath,omitempty"`
	MetricsFifoPath      string   `protobuf:"bytes,4,opt,name=MetricsFifoPath,json=metricsFifoPath,proto3" json:"MetricsFifoPath,omitempty"`
	CgroupPath           string   `protobuf:"bytes,5,opt,name=CgroupPath,json=cgroupPath,proto3" json:"CgroupPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVMInfoResponse) Reset()         { *m = GetVMInfoResponse{} }
func (m *GetVMInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetVMInfoResponse) ProtoMessage()    {}
func (*GetVMInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{4}
}
func (m *GetVMInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVMInfoResponse.Unmarshal(m, b)
}
func (m *GetVMInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVMInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetVMInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVMInfoResponse.Merge(m, src)
}
func (m *GetVMInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetVMInfoResponse.Size(m)
}
func (m *GetVMInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVMInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVMInfoResponse proto.InternalMessageInfo

func (m *GetVMInfoResponse) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

func (m *GetVMInfoResponse) GetSocketPath() string {
	if m != nil {
		return m.SocketPath
	}
	return ""
}

func (m *GetVMInfoResponse) GetLogFifoPath() string {
	if m != nil {
		return m.LogFifoPath
	}
	return ""
}

func (m *GetVMInfoResponse) GetMetricsFifoPath() string {
	if m != nil {
		return m.MetricsFifoPath
	}
	return ""
}

func (m *GetVMInfoResponse) GetCgroupPath() string {
	if m != nil {
		return m.CgroupPath
	}
	return ""
}

type SetVMMetadataRequest struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	Metadata             string   `protobuf:"bytes,2,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetVMMetadataRequest) Reset()         { *m = SetVMMetadataRequest{} }
func (m *SetVMMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*SetVMMetadataRequest) ProtoMessage()    {}
func (*SetVMMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{5}
}
func (m *SetVMMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVMMetadataRequest.Unmarshal(m, b)
}
func (m *SetVMMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVMMetadataRequest.Marshal(b, m, deterministic)
}
func (m *SetVMMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVMMetadataRequest.Merge(m, src)
}
func (m *SetVMMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_SetVMMetadataRequest.Size(m)
}
func (m *SetVMMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVMMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetVMMetadataRequest proto.InternalMessageInfo

func (m *SetVMMetadataRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

func (m *SetVMMetadataRequest) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

type UpdateVMMetadataRequest struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	Metadata             string   `protobuf:"bytes,2,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVMMetadataRequest) Reset()         { *m = UpdateVMMetadataRequest{} }
func (m *UpdateVMMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVMMetadataRequest) ProtoMessage()    {}
func (*UpdateVMMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{6}
}
func (m *UpdateVMMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVMMetadataRequest.Unmarshal(m, b)
}
func (m *UpdateVMMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVMMetadataRequest.Marshal(b, m, deterministic)
}
func (m *UpdateVMMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVMMetadataRequest.Merge(m, src)
}
func (m *UpdateVMMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVMMetadataRequest.Size(m)
}
func (m *UpdateVMMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVMMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVMMetadataRequest proto.InternalMessageInfo

func (m *UpdateVMMetadataRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

func (m *UpdateVMMetadataRequest) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

type GetVMMetadataRequest struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVMMetadataRequest) Reset()         { *m = GetVMMetadataRequest{} }
func (m *GetVMMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*GetVMMetadataRequest) ProtoMessage()    {}
func (*GetVMMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{7}
}
func (m *GetVMMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVMMetadataRequest.Unmarshal(m, b)
}
func (m *GetVMMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVMMetadataRequest.Marshal(b, m, deterministic)
}
func (m *GetVMMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVMMetadataRequest.Merge(m, src)
}
func (m *GetVMMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_GetVMMetadataRequest.Size(m)
}
func (m *GetVMMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVMMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVMMetadataRequest proto.InternalMessageInfo

func (m *GetVMMetadataRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type GetVMMetadataResponse struct {
	Metadata             string   `protobuf:"bytes,1,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVMMetadataResponse) Reset()         { *m = GetVMMetadataResponse{} }
func (m *GetVMMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*GetVMMetadataResponse) ProtoMessage()    {}
func (*GetVMMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{8}
}
func (m *GetVMMetadataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVMMetadataResponse.Unmarshal(m, b)
}
func (m *GetVMMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVMMetadataResponse.Marshal(b, m, deterministic)
}
func (m *GetVMMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVMMetadataResponse.Merge(m, src)
}
func (m *GetVMMetadataResponse) XXX_Size() int {
	return xxx_messageInfo_GetVMMetadataResponse.Size(m)
}
func (m *GetVMMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVMMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVMMetadataResponse proto.InternalMessageInfo

func (m *GetVMMetadataResponse) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

type PauseVMRequest struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseVMRequest) Reset()         { *m = PauseVMRequest{} }
func (m *PauseVMRequest) String() string { return proto.CompactTextString(m) }
func (*PauseVMRequest) ProtoMessage()    {}
func (*PauseVMRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{9}
}
func (m *PauseVMRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseVMRequest.Unmarshal(m, b)
}
func (m *PauseVMRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseVMRequest.Marshal(b, m, deterministic)
}
func (m *PauseVMRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseVMRequest.Merge(m, src)
}
func (m *PauseVMRequest) XXX_Size() int {
	return xxx_messageInfo_PauseVMRequest.Size(m)
}
func (m *PauseVMRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseVMRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PauseVMRequest proto.InternalMessageInfo

func (m *PauseVMRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type PauseVMResponse struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseVMResponse) Reset()         { *m = PauseVMResponse{} }
func (m *PauseVMResponse) String() string { return proto.CompactTextString(m) }
func (*PauseVMResponse) ProtoMessage()    {}
func (*PauseVMResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{10}
}
func (m *PauseVMResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseVMResponse.Unmarshal(m, b)
}
func (m *PauseVMResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseVMResponse.Marshal(b, m, deterministic)
}
func (m *PauseVMResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseVMResponse.Merge(m, src)
}
func (m *PauseVMResponse) XXX_Size() int {
	return xxx_messageInfo_PauseVMResponse.Size(m)
}
func (m *PauseVMResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseVMResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PauseVMResponse proto.InternalMessageInfo

func (m *PauseVMResponse) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type ResumeVMRequest struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeVMRequest) Reset()         { *m = ResumeVMRequest{} }
func (m *ResumeVMRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeVMRequest) ProtoMessage()    {}
func (*ResumeVMRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{11}
}
func (m *ResumeVMRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeVMRequest.Unmarshal(m, b)
}
func (m *ResumeVMRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeVMRequest.Marshal(b, m, deterministic)
}
func (m *ResumeVMRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeVMRequest.Merge(m, src)
}
func (m *ResumeVMRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeVMRequest.Size(m)
}
func (m *ResumeVMRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeVMRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeVMRequest proto.InternalMessageInfo

func (m *ResumeVMRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type ResumeVMResponse struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeVMResponse) Reset()         { *m = ResumeVMResponse{} }
func (m *ResumeVMResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeVMResponse) ProtoMessage()    {}
func (*ResumeVMResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{12}
}
func (m *ResumeVMResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeVMResponse.Unmarshal(m, b)
}
func (m *ResumeVMResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeVMResponse.Marshal(b, m, deterministic)
}
func (m *ResumeVMResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeVMResponse.Merge(m, src)
}
func (m *ResumeVMResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeVMResponse.Size(m)
}
func (m *ResumeVMResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeVMResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeVMResponse proto.InternalMessageInfo

func (m *ResumeVMResponse) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type MakeSnapshotRequest struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeSnapshotRequest) Reset()         { *m = MakeSnapshotRequest{} }
func (m *MakeSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*MakeSnapshotRequest) ProtoMessage()    {}
func (*MakeSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{13}
}
func (m *MakeSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeSnapshotRequest.Unmarshal(m, b)
}
func (m *MakeSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *MakeSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeSnapshotRequest.Merge(m, src)
}
func (m *MakeSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_MakeSnapshotRequest.Size(m)
}
func (m *MakeSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakeSnapshotRequest proto.InternalMessageInfo

func (m *MakeSnapshotRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type MakeSnapshotResponse struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeSnapshotResponse) Reset()         { *m = MakeSnapshotResponse{} }
func (m *MakeSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*MakeSnapshotResponse) ProtoMessage()    {}
func (*MakeSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{14}
}
func (m *MakeSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeSnapshotResponse.Unmarshal(m, b)
}
func (m *MakeSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *MakeSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeSnapshotResponse.Merge(m, src)
}
func (m *MakeSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_MakeSnapshotResponse.Size(m)
}
func (m *MakeSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakeSnapshotResponse proto.InternalMessageInfo

func (m *MakeSnapshotResponse) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type LoadSnapshotRequest struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadSnapshotRequest) Reset()         { *m = LoadSnapshotRequest{} }
func (m *LoadSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*LoadSnapshotRequest) ProtoMessage()    {}
func (*LoadSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{15}
}
func (m *LoadSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadSnapshotRequest.Unmarshal(m, b)
}
func (m *LoadSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *LoadSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadSnapshotRequest.Merge(m, src)
}
func (m *LoadSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_LoadSnapshotRequest.Size(m)
}
func (m *LoadSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadSnapshotRequest proto.InternalMessageInfo

func (m *LoadSnapshotRequest) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type LoadSnapshotResponse struct {
	VMID                 string   `protobuf:"bytes,1,opt,name=VMID,json=vMID,proto3" json:"VMID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadSnapshotResponse) Reset()         { *m = LoadSnapshotResponse{} }
func (m *LoadSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*LoadSnapshotResponse) ProtoMessage()    {}
func (*LoadSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{16}
}
func (m *LoadSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadSnapshotResponse.Unmarshal(m, b)
}
func (m *LoadSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *LoadSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadSnapshotResponse.Merge(m, src)
}
func (m *LoadSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_LoadSnapshotResponse.Size(m)
}
func (m *LoadSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoadSnapshotResponse proto.InternalMessageInfo

func (m *LoadSnapshotResponse) GetVMID() string {
	if m != nil {
		return m.VMID
	}
	return ""
}

type JailerConfig struct {
	NetNS string `protobuf:"bytes,1,opt,name=NetNS,json=netNS,proto3" json:"NetNS,omitempty"`
	// List of the physical numbers of the CPUs on which processes in that
	// cpuset are allowed to execute.  See List Format below for a description
	// of the format of cpus.
	//
	// The CPUs allowed to a cpuset may be changed by writing a new list to its
	// cpus file.
	// Taken from http://man7.org/linux/man-pages/man7/cpuset.7.html
	//
	// This is formatted as specified in the cpuset man page under "List Format"
	// http://man7.org/linux/man-pages/man7/cpuset.7.html
	CPUs string `protobuf:"bytes,2,opt,name=CPUs,json=cPUs,proto3" json:"CPUs,omitempty"`
	// List of memory nodes on which processes in this cpuset are allowed to
	// allocate memory.  See List Format below for a description of the format
	// of mems.
	// Taken from http://man7.org/linux/man-pages/man7/cpuset.7.html
	//
	// This is formatted as specified in the cpuset man page under "List Format"
	// http://man7.org/linux/man-pages/man7/cpuset.7.html
	Mems string `protobuf:"bytes,3,opt,name=Mems,json=mems,proto3" json:"Mems,omitempty"`
	UID  uint32 `protobuf:"varint,4,opt,name=UID,json=uID,proto3" json:"UID,omitempty"`
	GID  uint32 `protobuf:"varint,5,opt,name=GID,json=gID,proto3" json:"GID,omitempty"`
	// CgroupPath is used to dictate where the cgroup should be located
	// relative to the cgroup directory which is
	// /sys/fs/cgroup/cpu/<CgroupPath>/<vmID>
	// if no value was provided, then /firecracker-containerd will be used as
	// the default value
	CgroupPath           string   `protobuf:"bytes,6,opt,name=CgroupPath,json=cgroupPath,proto3" json:"CgroupPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JailerConfig) Reset()         { *m = JailerConfig{} }
func (m *JailerConfig) String() string { return proto.CompactTextString(m) }
func (*JailerConfig) ProtoMessage()    {}
func (*JailerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73317e9fb8da571, []int{17}
}
func (m *JailerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JailerConfig.Unmarshal(m, b)
}
func (m *JailerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JailerConfig.Marshal(b, m, deterministic)
}
func (m *JailerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JailerConfig.Merge(m, src)
}
func (m *JailerConfig) XXX_Size() int {
	return xxx_messageInfo_JailerConfig.Size(m)
}
func (m *JailerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_JailerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_JailerConfig proto.InternalMessageInfo

func (m *JailerConfig) GetNetNS() string {
	if m != nil {
		return m.NetNS
	}
	return ""
}

func (m *JailerConfig) GetCPUs() string {
	if m != nil {
		return m.CPUs
	}
	return ""
}

func (m *JailerConfig) GetMems() string {
	if m != nil {
		return m.Mems
	}
	return ""
}

func (m *JailerConfig) GetUID() uint32 {
	if m != nil {
		return m.UID
	}
	return 0
}

func (m *JailerConfig) GetGID() uint32 {
	if m != nil {
		return m.GID
	}
	return 0
}

func (m *JailerConfig) GetCgroupPath() string {
	if m != nil {
		return m.CgroupPath
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateVMRequest)(nil), "CreateVMRequest")
	proto.RegisterType((*CreateVMResponse)(nil), "CreateVMResponse")
	proto.RegisterType((*StopVMRequest)(nil), "StopVMRequest")
	proto.RegisterType((*GetVMInfoRequest)(nil), "GetVMInfoRequest")
	proto.RegisterType((*GetVMInfoResponse)(nil), "GetVMInfoResponse")
	proto.RegisterType((*SetVMMetadataRequest)(nil), "SetVMMetadataRequest")
	proto.RegisterType((*UpdateVMMetadataRequest)(nil), "UpdateVMMetadataRequest")
	proto.RegisterType((*GetVMMetadataRequest)(nil), "GetVMMetadataRequest")
	proto.RegisterType((*GetVMMetadataResponse)(nil), "GetVMMetadataResponse")
	proto.RegisterType((*PauseVMRequest)(nil), "PauseVMRequest")
	proto.RegisterType((*PauseVMResponse)(nil), "PauseVMResponse")
	proto.RegisterType((*ResumeVMRequest)(nil), "ResumeVMRequest")
	proto.RegisterType((*ResumeVMResponse)(nil), "ResumeVMResponse")
	proto.RegisterType((*MakeSnapshotRequest)(nil), "MakeSnapshotRequest")
	proto.RegisterType((*MakeSnapshotResponse)(nil), "MakeSnapshotResponse")
	proto.RegisterType((*LoadSnapshotRequest)(nil), "LoadSnapshotRequest")
	proto.RegisterType((*LoadSnapshotResponse)(nil), "LoadSnapshotResponse")
	proto.RegisterType((*JailerConfig)(nil), "JailerConfig")
}

func init() { proto.RegisterFile("firecracker.proto", fileDescriptor_a73317e9fb8da571) }

var fileDescriptor_a73317e9fb8da571 = []byte{
	// 675 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0xcf, 0x4f, 0xdb, 0x4a,
	0x10, 0x96, 0x49, 0x02, 0xc9, 0x98, 0xfc, 0xda, 0x17, 0xde, 0xb3, 0xd0, 0x13, 0xb2, 0xa2, 0xf7,
	0x50, 0xca, 0x01, 0xa9, 0x70, 0xa9, 0x7a, 0x2a, 0x4d, 0x0a, 0x32, 0x60, 0x14, 0x6d, 0x08, 0x87,
	0xde, 0xb6, 0xce, 0x24, 0xb8, 0x89, 0x77, 0xd3, 0xdd, 0x35, 0x6d, 0xff, 0x8b, 0xfe, 0x1f, 0xbd,
	0xb5, 0xff, 0x60, 0x65, 0x27, 0x38, 0x76, 0x0a, 0x2e, 0x52, 0x4f, 0x3d, 0xc5, 0xf3, 0xcd, 0x37,
	0xdf, 0x8c, 0x66, 0xbe, 0xd8, 0xd0, 0x1c, 0xfb, 0x12, 0x3d, 0xc9, 0xbc, 0x29, 0xca, 0xc3, 0xb9,
	0x14, 0x5a, 0xec, 0x9a, 0xfa, 0xf3, 0x1c, 0xd5, 0x22, 0x68, 0x7f, 0x2d, 0x42, 0xbd, 0x2b, 0x91,
	0x69, 0xbc, 0x71, 0x29, 0x7e, 0x08, 0x51, 0x69, 0x42, 0xa0, 0x78, 0xe3, 0x3a, 0x3d, 0xcb, 0xb0,
	0x8d, 0x4e, 0x85, 0x16, 0xef, 0x5c, 0xa7, 0x47, 0x5e, 0x01, 0xb8, 0xcc, 0xbb, 0xf5, 0x39, 0x76,
	0xc7, 0x13, 0x6b, 0xc3, 0x36, 0x3a, 0xe6, 0x91, 0x7d, 0x78, 0xba, 0x12, 0xbf, 0xcf, 0x0a, 0x3e,
	0xf6, 0x27, 0xa1, 0x64, 0xda, 0x17, 0x9c, 0x42, 0x90, 0xd4, 0x90, 0x0e, 0xd4, 0x2f, 0x50, 0x72,
	0x9c, 0x39, 0x01, 0x9b, 0x60, 0x9f, 0xe9, 0x5b, 0xab, 0x10, 0x37, 0xa8, 0x4f, 0xb3, 0x30, 0xd9,
	0x03, 0x58, 0x30, 0x4f, 0xe4, 0x44, 0x59, 0xc5, 0x98, 0x04, 0xd3, 0x04, 0x21, 0xc7, 0x50, 0xa1,
	0x42, 0xe8, 0x9e, 0xf4, 0xef, 0xd0, 0x2a, 0xc5, 0xa3, 0xec, 0xa4, 0x47, 0x49, 0x92, 0xb4, 0x22,
	0xef, 0x1f, 0xc9, 0x0b, 0x30, 0xe3, 0x07, 0x57, 0x84, 0x5c, 0x2b, 0x6b, 0xd3, 0x2e, 0x74, 0xcc,
	0xa3, 0xbf, 0xd3, 0x65, 0xab, 0x34, 0x35, 0x47, 0x2b, 0x2a, 0x39, 0x87, 0xe6, 0x15, 0xea, 0x8f,
	0x42, 0x4e, 0x1d, 0xae, 0x51, 0x8e, 0x99, 0x87, 0xca, 0xda, 0x8a, 0xeb, 0xff, 0x4d, 0xd7, 0xaf,
	0x93, 0x68, 0x93, 0xaf, 0x97, 0x91, 0x7d, 0xa8, 0x75, 0x05, 0xd7, 0xcc, 0xe7, 0x28, 0xbb, 0x91,
	0xbc, 0x55, 0xb6, 0x8d, 0x4e, 0x89, 0xd6, 0xbc, 0x0c, 0x4a, 0x5e, 0x82, 0xf5, 0xe6, 0x93, 0xaf,
	0x4f, 0xc6, 0x1a, 0xe5, 0xc9, 0x6c, 0x76, 0xcd, 0xd4, 0x54, 0xf5, 0x70, 0x86, 0x1a, 0x47, 0x56,
	0xc5, 0x36, 0x3a, 0x65, 0x6a, 0xe1, 0x23, 0x79, 0xf2, 0x1c, 0xb6, 0xcf, 0x99, 0x3f, 0x8b, 0xa4,
	0xa2, 0x5b, 0x58, 0x10, 0x6f, 0xa8, 0x7a, 0x98, 0x06, 0xe9, 0xf6, 0xfb, 0x54, 0x14, 0x8d, 0x75,
	0xed, 0x07, 0x28, 0x42, 0x3d, 0x40, 0x4f, 0xf0, 0x91, 0xb2, 0x4c, 0xdb, 0xe8, 0x54, 0x69, 0x4d,
	0x67, 0xd0, 0xf6, 0x37, 0x03, 0x1a, 0x2b, 0xb7, 0xa8, 0xb9, 0xe0, 0x0a, 0x1f, 0xb4, 0xcb, 0x1e,
	0xc0, 0x40, 0x78, 0x53, 0xd4, 0xf1, 0x9d, 0x37, 0x16, 0x27, 0x54, 0x09, 0x42, 0x6c, 0x30, 0x2f,
	0xc5, 0xe4, 0xd4, 0x1f, 0x8b, 0x94, 0x11, 0xcc, 0xd9, 0x0a, 0x8a, 0xec, 0xe2, 0xa2, 0x96, 0xbe,
	0xa7, 0x12, 0xd6, 0xc2, 0x09, 0xf5, 0x20, 0x0b, 0x47, 0xbd, 0xba, 0x13, 0x29, 0xc2, 0x79, 0x4c,
	0x2a, 0x2d, 0x7a, 0x79, 0x09, 0xd2, 0xbe, 0x80, 0xea, 0x40, 0x8b, 0x79, 0xbe, 0xbf, 0x7f, 0xde,
	0xc0, 0xc6, 0x83, 0x1b, 0xd8, 0x87, 0xc6, 0x19, 0xea, 0x1b, 0xd7, 0xe1, 0x63, 0x91, 0xa3, 0xd7,
	0xfe, 0x6e, 0x40, 0x33, 0x45, 0xfc, 0x43, 0x56, 0x75, 0x0a, 0xad, 0x41, 0x34, 0xb4, 0x8b, 0x9a,
	0x8d, 0x98, 0x66, 0x79, 0x1b, 0xdb, 0x85, 0xf2, 0x3d, 0x6d, 0x39, 0x75, 0x39, 0x58, 0xc6, 0x6d,
	0x07, 0xfe, 0x19, 0xce, 0x47, 0xb1, 0x4d, 0x7e, 0x57, 0xea, 0x00, 0x5a, 0x67, 0x4f, 0x1c, 0xa9,
	0x7d, 0x0c, 0x3b, 0x6b, 0xdc, 0xe5, 0xde, 0xd3, 0x0d, 0x8c, 0xb5, 0x06, 0xff, 0x41, 0xad, 0xcf,
	0x42, 0x95, 0xff, 0xfe, 0x6b, 0xff, 0x0f, 0xf5, 0x84, 0xf5, 0xf8, 0x31, 0x23, 0x1a, 0x45, 0x15,
	0x06, 0xbf, 0x50, 0xdb, 0x87, 0xc6, 0x8a, 0x96, 0x23, 0xf7, 0x0c, 0xfe, 0x72, 0xd9, 0x14, 0x07,
	0x9c, 0xcd, 0xd5, 0xad, 0xd0, 0x79, 0x92, 0x07, 0xd0, 0xca, 0x52, 0xf3, 0x65, 0x2f, 0x05, 0x1b,
	0x3d, 0x51, 0x36, 0x4b, 0xcd, 0x91, 0xfd, 0x62, 0x64, 0xdf, 0x3c, 0xa4, 0x05, 0xa5, 0x2b, 0xd4,
	0x57, 0x83, 0x25, 0xab, 0xc4, 0xa3, 0x20, 0x2a, 0xed, 0xf6, 0x87, 0x6a, 0x79, 0xe9, 0xa2, 0xd7,
	0x1f, 0xaa, 0x08, 0x73, 0x31, 0x50, 0x4b, 0x77, 0x17, 0x03, 0x0c, 0x14, 0x69, 0x40, 0x61, 0xe8,
	0xf4, 0x62, 0x2b, 0x57, 0x69, 0x21, 0x74, 0x7a, 0x11, 0x72, 0xe6, 0xf4, 0x62, 0xdf, 0x56, 0x69,
	0x61, 0xb2, 0xf8, 0xf3, 0xa4, 0x0c, 0xbd, 0xb9, 0x6e, 0xe8, 0xd7, 0x5b, 0x6f, 0x4b, 0xf1, 0x77,
	0xee, 0xdd, 0x66, 0xfc, 0x73, 0xfc, 0x23, 0x00, 0x00, 0xff, 0xff, 0xf5, 0xdf, 0x30, 0x9e, 0x10,
	0x07, 0x00, 0x00,
}
